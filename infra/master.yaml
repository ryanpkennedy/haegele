AWSTemplateFormatVersion: '2010-09-09'
# *** Change this to something useful for you!
Description: > 
    Template to create a VPC, internet gateway, two public subnets, 
    two private subnets and associated NAT gateways, security groups,
    route tables, load balancer, hosted zone and ECS cluster

Parameters:

  EnvironmentName:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"

  DomainName:
    Type: String

  DomainPrefix:
    Type: String
    Default: www
    
Resources:

# Standard Resource Definitions

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://dangerard-cf-templates.s3.amazonaws.com/vpc.yaml
            Parameters: 
                EnvironmentName:    !Ref EnvironmentName
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                VpcCIDR:            10.180.0.0/16

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://dangerard-cf-templates.s3.amazonaws.com/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref EnvironmentName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://dangerard-cf-templates.s3.amazonaws.com/load-balancers.yaml 
            Parameters: 
                EnvironmentName: !Ref EnvironmentName
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                VPC: !GetAtt VPC.Outputs.VPC

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://dangerard-cf-templates.s3.amazonaws.com/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref EnvironmentName
                VPC: !GetAtt VPC.Outputs.VPC

    Route53:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://dangerard-cf-templates.s3.amazonaws.com/domain.yaml
            Parameters:
                DomainName: !Ref DomainName
                DomainPrefix: !Ref DomainPrefix
                LoadBalancerHostedZone: !GetAtt ALB.Outputs.LoadBalancerHostedZone
                LoadBalancerDNS: !GetAtt ALB.Outputs.LoadBalancerDNS

# Service Definitions

#     ProductService:
#         Type: AWS::CloudFormation::Stack
#         Properties:
#             TemplateURL: https://s3.amazonaws.com/fargate-refarch-cloudformation/services/product-service/service.yaml
#             Parameters:
#                 Cluster: !GetAtt ECS.Outputs.Cluster
#                 DesiredCount: 2
#                 ECSTaskExecutionRole: !GetAtt ECS.Outputs.ECSTaskExecutionRole
#                 Listener: !GetAtt ALB.Outputs.Listener 
#                 Path: /products
#                 SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
#                 Subnets: !GetAtt VPC.Outputs.PrivateSubnets
#                 TaskCpu: 512
#                 TaskMemory: 1024
#                 VPC: !GetAtt VPC.Outputs.VPC

    # WebsiteService:
    #     Type: AWS::CloudFormation::Stack
    #     Properties:
    #         TemplateURL: https://s3.amazonaws.com/fargate-refarch-cloudformation/services/website-service/service.yaml
    #         Parameters:
    #             Cluster: !GetAtt ECS.Outputs.Cluster
    #             DesiredCount: 2
    #             ECSTaskExecutionRole: !GetAtt ECS.Outputs.ECSTaskExecutionRole
    #             Listener: !GetAtt ALB.Outputs.Listener 
    #             Path: /
    #             ProductServiceUrl: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
    #             SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
    #             Subnets: !GetAtt VPC.Outputs.PrivateSubnets
    #             TaskCpu: 256
    #             TaskMemory: 512
    #             VPC: !GetAtt VPC.Outputs.VPC

Outputs:

#     ProductServiceUrl: 
#         Description: The URL endpoint for the product service
#         Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]

    NameServers:
        Description: The nameservers of the Route53 NS record.
        Value: !GetAtt Route53.Outputs.NameServers

    TargetDomainName: 
        Description: The target domain endpoint for the website service
        Value: !Sub ${DomainPrefix}.${DomainName}


    WebsiteServiceUrl: 
        Description: The URL endpoint for the website service
        Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerDNS, "/" ]]

